<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net471</TargetFramework>
	<OutDir>.\Plugins</OutDir>
	<DebugType>none</DebugType>
	<AssemblyName>Amazon.GameLiftPlugin.Core.tmp</AssemblyName>
	<LangVersion>8.0</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <!-- See: https://www.nuget.org/packages?q=AWSSDK -->
    <PackageReference Include="AWSSDK.CloudFormation" Version="3.7.3.2" />
	<PackageReference Include="AWSSDK.CognitoIdentityProvider" Version="3.7.1.13" />
    <PackageReference Include="AWSSDK.ECR" Version="3.7.402.7" />
    <PackageReference Include="AWSSDK.GameLift" Version="3.7.402.8" />
    <PackageReference Include="AWSSDK.S3" Version="3.7.205" />
    <PackageReference Include="AWSSDK.SecurityToken" Version="3.7.1.23" />
    <PackageReference Include="Microsoft.IdentityModel.JsonWebTokens" Version="6.34.0" />
    <PackageReference Include="Microsoft.IdentityModel.Logging" Version="6.34.0" />
    <PackageReference Include="Microsoft.IdentityModel.Tokens" Version="6.34.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="Serilog" Version="2.10.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="5.0.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.34.0" />
    <PackageReference Include="System.IO.Compression.ZipFile" Version="4.3.0" />
    <PackageReference Include="YamlDotNet" Version="11.2.0" />
    <PackageReference Include="Moq" Version="4.16.1" />
    <PackageReference Include="Castle.Core" Version="4.4.0" />
  </ItemGroup>
  <ItemGroup>
    <!-- See: https://stackoverflow.com/questions/15241889/i-didnt-find-zipfile-class-in-the-system-io-compression-namespace -->
    <Reference Include="System.IO.Compression.FileSystem" />
  </ItemGroup>
  <Target Name="PostBuild" AfterTargets="Build">
    <RemoveDir Directories="$(BaseIntermediateOutputPath)" /> <!-- obj -->
    <!-- This build process is only used to put the AWS SDK DLLs and its dependpencies into a "Plugins" folder,
		 so that Unity can detect these binaries. The source code of the Core library is included in "Runtime.Core"
		 directly with its own assembly definition, so Unity can reference its source directly and therefore the
		 dll containing Amazon.GameLiftPlugin.Core is not needed. -->
	<Delete Files="$(OutDir)$(AssemblyName).dll" /> <!-- Deletes .\Plugins\Amazon.GameLiftPlugin.Core.tmp.dll -->
	<Delete Files="$(OutDir)Newtonsoft.Json.dll" /> <!-- Deletes .\Plugins\Newtonsoft.Json.dll -->
	<Delete Files="$(OutDir)System.Runtime.CompilerServices.Unsafe.dll" /> <!-- Deletes .\Plugins\System.Runtime.CompilerServices.Unsafe.dll -->
    <RemoveDir Directories="$(BaseIntermediateOutputPath)" /> <!-- Deletes .\obj\ -->
  </Target>
</Project>